<!--pages/demo03/demo03.wxml-->
<!--    1 text 相当于 span
        2 view 相当于 div
<text>1</text>
<text>2</text>
<view>1</view>
<view>2</view>
-->

<!-- 1 字符串 -->
<view>
    {{msg}}
</view>
  
<!-- 2 数字类型 -->
<view>
    {{num}}
</view>
  
<!-- 3 布尔类型 -->
<view>
    是否是伪娘: {{isGirl}}
</view>
  
<!-- 4 object -->
<view>
    年龄: {{person.age}}
</view>
<view>
    体重: {{person.weight}}
</view>
<view>
    身高: {{person.height}}
</view>
  
<!-- 5 在标签中使用 -->
<view data-num="{{num}}">自定义属性</view>
  
<!-- 6 使用布尔类型的变量充当属性 -->
<view>
    <checkbox checked="{{isChecked}}">isChecked</checkbox>
</view>
<!-- 注意: 字符串和花括号之间不要留空格
<view>
    <checkbox checked="      {{isChecked}}">isChecked</checkbox>
</view>
-->

<!-- 7 表达式和语句 
        1.表达式
            1.数字加减
            2.字符串拼接
            3.三元表达式
        2.语句    
            1.复杂的代码段
                1. if else
                2. switch
                3. do while ...
                4. for ...
-->
<view>{{1+1}}</view>
<view>{{'1'+'1'}}</view>
<view>{{12%2===0 ? '偶数' : '奇数'}}</view>

<!-- 8 列表循环
        1. wx:for="{{数组或者对象}}" wx:for-item="循环项的名称" wx:for-index="循环下的索引"
        2. wx:key="唯一的值"用来提高列表渲染的性能
            1. 绑定一个普通的字符串的时候,那么这个字符串名称 肯定是 循环数组 中的 对象的 唯一属性
            2. wx:key=".*this" 是表示 你的数组 是一个普通的数组 *this 是表示循环项
                [1, 2, 3, 5, 6]
                ['1', '22', '333']
            3. 当出现 数组嵌套的时候 尤其要注意 以下绑定的名称 不要重名
                wx:for="{{list}}" wx:for-item="item" wx:for-index="index"
            4. 默认情况下 我们 不写
                wx:for="{{list}}" wx:for-item="item" wx:for-index="index"
                小程序的也会把 循环项的名称 和 索引的名称 视为 item 和 index
                只有一层循环的话（wx:for="{{list}}" wx:for-item="item" wx:for-index="index"） 可以省略

    9 对象循环
        1. wx:for="{{对象}}" wx:for-item="对象的名称" wx:for-index="对象的属性"
        2. 循环对象的时候 最好把 item 和 value的名称修改下
            wx:for-item="value" wx:for-index="key"
-->
<view>
    <view
        wx:for="{{list}}" 
        wx:for-item="item" 
        wx:for-index="index"
        wx:key="id">
          索引:{{index}} -- 键: {{item.id}} -- 值: {{item.name}}
    </view>
</view>
<!-- 列表一层循环时 相当于 -->
<view>
    <view
        wx:for="{{list}}" 
        wx:key="id">
          索引:{{index}} -- 键: {{item.id}} -- 值: {{item.name}}
    </view>
</view>

<!-- 对象循环 -->
<view>
    <view>对象循环</view>
    <view wx:for="{{person}}" 
        wx:for-item="value" 
        wx:for-index="key"
        wx:key="age">
        属性: {{value}}
        --
        值: {{key}}
    </view>
</view>

<!-- 10 block 
    1. 相当于占位符标签
    2. 写代码的时候 可以看到标签存在
    3. 页面渲染 小程序会把他移除掉
-->
<view>
    <block
        wx:for="{{list}}" 
        wx:for-item="item" 
        wx:for-index="index"
        wx:key="id"
        class="my_list">
          索引:{{index}} -- 键: {{item.id}} -- 值: {{item.name}}
    </block>
</view>

<!-- 11 条件渲染
        1. wx:if="{{true/false}}"
        2. wx:if 
            wx:elif 
            wx:else
        3. hidden
            1. 在标签上直接添加属性 hidden
            2. 在标签上直接添加属性 hidden="{{true/false}}"

        4. 场景选择
            1. 当便签不是频繁的切换显示 优先使用 wx:if
                直接把标签 从页面结构移除
            2. 当便签频繁的切换显示 优先使用 hidden
                通过添加样式
                hidden属性 不要和 dispalsy样式一起使用 
-->
<view>
    <view>条件渲染</view>
    <view wx:if="{{true}}">显示</view>
    <view wx:if="{{false}}">隐藏</view>

    <view wx:if="{{false}}">1</view>
    <view wx:elif="{{false}}">2</view>
    <view wx:else>3</view>

    <view>--- --- --- --- --- ---</view>
    <view>hidden1</view>
    <view hidden>hidden2</view>
    <view hidden="{{true}}">hidden3</view>
    <view hidden="{{false}}">hidden4</view>

    <view>--- --- --- 000 --- --- ---</view>
    <view wx:if="{{false}}">wx:if</view>
    <view hidden>hidden</view>
    <view hidden style="display:flex">hidden</view>
</view>

  
